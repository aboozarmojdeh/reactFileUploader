[{"C:\\reactFileUploader\\client\\src\\index.js":"1","C:\\reactFileUploader\\client\\src\\App.js":"2","C:\\reactFileUploader\\client\\src\\reportWebVitals.js":"3","C:\\reactFileUploader\\client\\src\\components\\FileUpload.js":"4","C:\\reactFileUploader\\client\\src\\components\\Message.js":"5","C:\\reactFileUploader\\client\\src\\components\\Progress.js":"6"},{"size":500,"mtime":1609270965120,"results":"7","hashOfConfig":"8"},{"size":319,"mtime":1609270499843,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2504,"mtime":1609345944081,"results":"11","hashOfConfig":"8"},{"size":497,"mtime":1609345618011,"results":"12","hashOfConfig":"8"},{"size":449,"mtime":1609270394243,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1s0tgp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\reactFileUploader\\client\\src\\index.js",[],["29","30"],"C:\\reactFileUploader\\client\\src\\App.js",[],"C:\\reactFileUploader\\client\\src\\reportWebVitals.js",[],"C:\\reactFileUploader\\client\\src\\components\\FileUpload.js",["31"],"import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('http://localhost:5000/uploadphotomodel', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n      console.log(uploadedFile.filePath)\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n      <form onSubmit={onSubmit}>\n        <div className='input-group mb-3'>\n          <input\n            type='file'\n            className='form-control'\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='input-group-text' htmlFor='customFile'>\n          Upload\n          </label>\n        </div>\n\n        <Progress percentage={uploadPercentage} />\n\n        <input\n          type='submit'\n          value='Upload'\n          className='btn btn-primary btn-block mt-4'\n        />\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n","C:\\reactFileUploader\\client\\src\\components\\Message.js",[],"C:\\reactFileUploader\\client\\src\\components\\Progress.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":8,"column":10,"nodeType":"40","messageId":"41","endLine":8,"endColumn":18},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'filename' is assigned a value but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]